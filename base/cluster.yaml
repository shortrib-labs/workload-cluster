apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  annotations:
    osInfo: photon,3,amd64
    tkg.tanzu.vmware.com/cluster-controlplane-endpoint: arbol.lab.shortrib.net
    tkg/plan: dev
  labels:
    tanzuKubernetesRelease: v1.23.8---vmware.2-tkg.1
    tkg.tanzu.vmware.com/cluster-name: arbol
  name: arbol
  namespace: shared-services
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 100.96.0.0/11
    services:
      cidrBlocks:
        - 100.64.0.0/13
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: arbol-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: VSphereCluster
    name: arbol
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereCluster
metadata:
  name: arbol
  namespace: shared-services
spec:
  identityRef:
    kind: Secret
    name: arbol
  server: vcenter.lab.shortrib.net
  thumbprint: 15:DF:3E:7E:15:A8:CA:5D:BE:9F:B3:46:14:89:7F:99:FB:1B:60:0C
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  annotations:
    vmTemplateMoid: vm-93014
  name: arbol-control-plane
  namespace: shared-services
spec:
  template:
    spec:
      cloneMode: fullClone
      datacenter: /garage
      datastore: /garage/datastore/vsanDatastore
      diskGiB: 40
      folder: /garage/vm/templates/tanzu
      memoryMiB: 4096
      network:
        devices:
          - dhcp4: true
            networkName: /garage/network/management-pg
      numCPUs: 3
      resourcePool: /garage/host/homelab/Resources/tanzu
      server: vcenter.lab.shortrib.net
      storagePolicyName: ""
      template: /garage/vm/templates/tanzu/photon-3-kube-v1.23.8
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  annotations:
    vmTemplateMoid: vm-93014
  name: arbol-worker
  namespace: shared-services
spec:
  template:
    spec:
      cloneMode: fullClone
      datacenter: /garage
      datastore: /garage/datastore/vsanDatastore
      diskGiB: 50
      folder: /garage/vm/templates/tanzu
      memoryMiB: 4096
      network:
        devices:
          - dhcp4: true
            networkName: /garage/network/management-pg
      numCPUs: 4
      resourcePool: /garage/host/homelab/Resources/tanzu
      server: vcenter.lab.shortrib.net
      storagePolicyName: ""
      template: /garage/vm/templates/tanzu/photon-3-kube-v1.23.8
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: arbol-control-plane
  namespace: shared-services
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          audit-log-maxage: "30"
          audit-log-maxbackup: "10"
          audit-log-maxsize: "100"
          audit-log-path: /var/log/kubernetes/audit.log
          audit-policy-file: /etc/kubernetes/audit-policy.yaml
          cloud-provider: external
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        extraVolumes:
          - hostPath: /etc/kubernetes/audit-policy.yaml
            mountPath: /etc/kubernetes/audit-policy.yaml
            name: audit-policy
          - hostPath: /var/log/kubernetes
            mountPath: /var/log/kubernetes
            name: audit-logs
        timeoutForControlPlane: 8m0s
      controllerManager:
        extraArgs:
          cloud-provider: external
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      dns:
        imageRepository: projects.registry.vmware.com/tkg
        imageTag: v1.8.6_vmware.7
      etcd:
        local:
          dataDir: /var/lib/etcd
          extraArgs:
            cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            experimental-initial-corrupt-check: "true"
          imageRepository: projects.registry.vmware.com/tkg
          imageTag: v3.5.4_vmware.6
      featureGates: {}
      imageRepository: projects.registry.vmware.com/tkg
      scheduler:
        extraArgs:
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    files:
      - content: YXBpVmVyc2lvbjogYXVkaXQuazhzLmlvL3YxYmV0YTEKa2luZDogUG9saWN5CnJ1bGVzOgotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06a3ViZS1wcm94eQogIHZlcmJzOgogIC0gd2F0Y2gKICByZXNvdXJjZXM6CiAgLSBncm91cDogIiIKICAgIHJlc291cmNlczoKICAgIC0gZW5kcG9pbnRzCiAgICAtIHNlcnZpY2VzCiAgICAtIHNlcnZpY2VzL3N0YXR1cwotIGxldmVsOiBOb25lCiAgdXNlckdyb3VwczoKICAtIHN5c3RlbTpub2RlcwogIHZlcmJzOgogIC0gZ2V0CiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIG5vZGVzCiAgICAtIG5vZGVzL3N0YXR1cwotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAtIHN5c3RlbTprdWJlLXNjaGVkdWxlcgogIC0gc3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmVuZHBvaW50LWNvbnRyb2xsZXIKICB2ZXJiczoKICAtIGdldAogIC0gdXBkYXRlCiAgbmFtZXNwYWNlczoKICAtIGt1YmUtc3lzdGVtCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIGVuZHBvaW50cwotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06YXBpc2VydmVyCiAgdmVyYnM6CiAgLSBnZXQKICByZXNvdXJjZXM6CiAgLSBncm91cDogIiIKICAgIHJlc291cmNlczoKICAgIC0gbmFtZXNwYWNlcwogICAgLSBuYW1lc3BhY2VzL3N0YXR1cwogICAgLSBuYW1lc3BhY2VzL2ZpbmFsaXplCi0gbGV2ZWw6IE5vbmUKICB1c2VyczoKICAtIHN5c3RlbTprdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6IG1ldHJpY3MuazhzLmlvCi0gbGV2ZWw6IE5vbmUKICBub25SZXNvdXJjZVVSTHM6CiAgLSAvaGVhbHRoeioKICAtIC92ZXJzaW9uCiAgLSAvc3dhZ2dlcioKLSBsZXZlbDogTm9uZQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogICAgcmVzb3VyY2VzOgogICAgLSBldmVudHMKLSBsZXZlbDogTm9uZQogIHVzZXJHcm91cHM6CiAgLSBzeXN0ZW06c2VydmljZWFjY291bnRzOnZtd2FyZS1zeXN0ZW0tdG1jCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gbGV2ZWw6IE5vbmUKICB1c2VyczoKICAtIHN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpnZW5lcmljLWdhcmJhZ2UtY29sbGVjdG9yCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gbGV2ZWw6IFJlcXVlc3QKICB1c2VyR3JvdXBzOgogIC0gc3lzdGVtOm5vZGVzCiAgdmVyYnM6CiAgLSB1cGRhdGUKICAtIHBhdGNoCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIG5vZGVzL3N0YXR1cwogICAgLSBwb2RzL3N0YXR1cwogIG9taXRTdGFnZXM6CiAgLSBSZXF1ZXN0UmVjZWl2ZWQKLSBsZXZlbDogUmVxdWVzdAogIHVzZXJzOgogIC0gc3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOm5hbWVzcGFjZS1jb250cm9sbGVyCiAgdmVyYnM6CiAgLSBkZWxldGVjb2xsZWN0aW9uCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBNZXRhZGF0YQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogICAgcmVzb3VyY2VzOgogICAgLSBzZWNyZXRzCiAgICAtIGNvbmZpZ21hcHMKICAtIGdyb3VwOiBhdXRoZW50aWNhdGlvbi5rOHMuaW8KICAgIHJlc291cmNlczoKICAgIC0gdG9rZW5yZXZpZXdzCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBSZXF1ZXN0CiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgLSBncm91cDogYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGFwaWV4dGVuc2lvbnMuazhzLmlvCiAgLSBncm91cDogYXBpcmVnaXN0cmF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGFwcHMKICAtIGdyb3VwOiBhdXRoZW50aWNhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhdXRob3JpemF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGF1dG9zY2FsaW5nCiAgLSBncm91cDogYmF0Y2gKICAtIGdyb3VwOiBjZXJ0aWZpY2F0ZXMuazhzLmlvCiAgLSBncm91cDogZXh0ZW5zaW9ucwogIC0gZ3JvdXA6IG1ldHJpY3MuazhzLmlvCiAgLSBncm91cDogbmV0d29ya2luZy5rOHMuaW8KICAtIGdyb3VwOiBwb2xpY3kKICAtIGdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAgLSBncm91cDogc2V0dGluZ3MuazhzLmlvCiAgLSBncm91cDogc3RvcmFnZS5rOHMuaW8KICBvbWl0U3RhZ2VzOgogIC0gUmVxdWVzdFJlY2VpdmVkCi0gbGV2ZWw6IFJlcXVlc3RSZXNwb25zZQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogIC0gZ3JvdXA6IGFkbWlzc2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhcGlleHRlbnNpb25zLms4cy5pbwogIC0gZ3JvdXA6IGFwaXJlZ2lzdHJhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhcHBzCiAgLSBncm91cDogYXV0aGVudGljYXRpb24uazhzLmlvCiAgLSBncm91cDogYXV0aG9yaXphdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhdXRvc2NhbGluZwogIC0gZ3JvdXA6IGJhdGNoCiAgLSBncm91cDogY2VydGlmaWNhdGVzLms4cy5pbwogIC0gZ3JvdXA6IGV4dGVuc2lvbnMKICAtIGdyb3VwOiBtZXRyaWNzLms4cy5pbwogIC0gZ3JvdXA6IG5ldHdvcmtpbmcuazhzLmlvCiAgLSBncm91cDogcG9saWN5CiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IHNldHRpbmdzLms4cy5pbwogIC0gZ3JvdXA6IHN0b3JhZ2UuazhzLmlvCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBNZXRhZGF0YQogIG9taXRTdGFnZXM6CiAgLSBSZXF1ZXN0UmVjZWl2ZWQK
        encoding: base64
        owner: root:root
        path: /etc/kubernetes/audit-policy.yaml
        permissions: "0600"
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        name: '{{ ds.meta_data.hostname }}'
    joinConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        name: '{{ ds.meta_data.hostname }}'
    preKubeadmCommands:
      - hostname "{{ ds.meta_data.hostname }}"
      - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
      - echo "127.0.0.1   localhost" >>/etc/hosts
      - echo "127.0.0.1   {{ ds.meta_data.hostname }}" >>/etc/hosts
      - echo "{{ ds.meta_data.hostname }}" >/etc/hostname
    useExperimentalRetryJoin: true
    users:
      - name: capv
        sshAuthorizedKeys:
          - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDt39SrVyQAVPHEEkfjekQYO1GSrUU9UvBrznXgOcz60
        sudo: ALL=(ALL) NOPASSWD:ALL
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VSphereMachineTemplate
      name: arbol-control-plane
  replicas: 1
  version: v1.23.8+vmware.2
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: arbol-md-0
  namespace: shared-services
spec:
  template:
    spec:
      clusterConfiguration:
        featureGates: {}
      files: []
      joinConfiguration:
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
            tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          name: '{{ ds.meta_data.hostname }}'
      preKubeadmCommands:
        - hostname "{{ ds.meta_data.hostname }}"
        - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
        - echo "127.0.0.1   localhost" >>/etc/hosts
        - echo "127.0.0.1   {{ ds.meta_data.hostname }}" >>/etc/hosts
        - echo "{{ ds.meta_data.hostname }}" >/etc/hostname
      useExperimentalRetryJoin: true
      users:
        - name: capv
          sshAuthorizedKeys:
            - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDt39SrVyQAVPHEEkfjekQYO1GSrUU9UvBrznXgOcz60
          sudo: ALL=(ALL) NOPASSWD:ALL
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  annotations:
    cluster.k8s.io/cluster-api-autoscaler-node-group-max-size: "4"
    cluster.k8s.io/cluster-api-autoscaler-node-group-min-size: "2"
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-md-0
  namespace: shared-services
spec:
  clusterName: arbol
  replicas: 2
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: arbol
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: arbol
        node-pool: arbol-worker-pool
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: arbol-md-0
      clusterName: arbol
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        name: arbol-worker
      version: v1.23.8+vmware.2
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metadata/tkg
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-tkg-metadata
  namespace: shared-services
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: arbol
  resources:
    - kind: Secret
      name: arbol-tkg-metadata-namespace-role
    - kind: Secret
      name: arbol-tkg-metadata-configmap
    - kind: Secret
      name: arbol-tkg-metadata-bom-configmap
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/core-package-repo
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-core-package-repository
  namespace: shared-services
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: arbol
  resources:
    - kind: Secret
      name: arbol-core-package-repository-crs
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/standard-package-repo
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-standard-package-repository
  namespace: shared-services
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: arbol
  resources:
    - kind: Secret
      name: arbol-standard-package-repository-crs
  strategy: ApplyOnce
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: arbol
  namespace: shared-services
spec:
  clusterName: arbol
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      node-pool: arbol-worker-pool
  unhealthyConditions:
    - status: Unknown
      timeout: 5m
      type: Ready
    - status: "False"
      timeout: 12m
      type: Ready
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: arbol-control-plane
  namespace: shared-services
spec:
  clusterName: arbol
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      cluster.x-k8s.io/control-plane: ""
  unhealthyConditions:
    - status: Unknown
      timeout: 5m
      type: Ready
    - status: "False"
      timeout: 12m
      type: Ready
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-default-storage-class
  namespace: shared-services
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: arbol
  resources:
    - kind: Secret
      name: arbol-default-storage-class
  strategy: ApplyOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: arbol-cluster-autoscaler
  name: arbol-cluster-autoscaler
  namespace: shared-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: arbol-cluster-autoscaler
  template:
    metadata:
      labels:
        app: arbol-cluster-autoscaler
    spec:
      containers:
        - args:
            - --cloud-provider=clusterapi
            - --v=4
            - --clusterapi-cloud-config-authoritative
            - --kubeconfig=/mnt/arbol-kubeconfig/value
            - --node-group-auto-discovery=clusterapi:clusterName=arbol
            - --scale-down-delay-after-add=10m
            - --scale-down-delay-after-delete=10s
            - --scale-down-delay-after-failure=3m
            - --scale-down-unneeded-time=10m
            - --max-node-provision-time=15m
            - --max-nodes-total=0
          command:
            - /cluster-autoscaler
          image: projects.registry.vmware.com/tkg/cluster-autoscaler:v1.23.0_vmware.1
          name: arbol-cluster-autoscaler
          volumeMounts:
            - mountPath: /mnt/arbol-kubeconfig
              name: arbol-cluster-autoscaler-volume
              readOnly: true
      serviceAccountName: arbol-autoscaler
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: arbol-cluster-autoscaler-volume
          secret:
            secretName: arbol-kubeconfig
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: arbol-autoscaler-workload
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-workload
subjects:
  - kind: ServiceAccount
    name: arbol-autoscaler
    namespace: shared-services
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: arbol-autoscaler-management
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-management
subjects:
  - kind: ServiceAccount
    name: arbol-autoscaler
    namespace: shared-services
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: arbol-autoscaler
  namespace: shared-services
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-autoscaler-workload
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
      - pods
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-autoscaler-management
rules:
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machinedeployments
      - machines
      - machinesets
    verbs:
      - get
      - list
      - update
      - watch
      - patch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machinedeployments/scale
      - machinesets/scale
    verbs:
      - get
      - update
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: capabilities/capabilities-controller
  labels:
    cluster.x-k8s.io/cluster-name: arbol
  name: arbol-capabilities
  namespace: shared-services
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: arbol
  resources:
    - kind: Secret
      name: arbol-capabilities
  strategy: ApplyOnce
